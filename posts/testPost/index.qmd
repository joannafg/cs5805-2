---
title: "Test"
author: "Joanna Fang"
date: "2023-11-17"
categories: [code, analysis, test]
jupyter: python3
---

This is a test post. 
This is to test changes were deployed : D ---- 12:21PM 
This is to test changes were deployed : D ---- 1:05PM 


![](elena-cordery-RLlcbkemwnw-unsplash.jpg)

Here's a simple Python code snippet:

```{python}
print("Hello, world 123!")
```

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import sys
!{sys.executable} -m pip install numpy
!{sys.executable} -m pip install matplotlib


import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```
-Joanna 


# Understanding the Poisson Distribution through Email Traffic Analysis

## Introduction

In the realm of probability and statistics, the Poisson distribution is a fundamental concept, often used to model the frequency of various types of events. This blog post aims to demystify the Poisson distribution by tracing its roots back to the Binomial distribution, and then, applying it to a real-world scenario: analyzing the number of emails received per hour.

## The Theoretical Underpinnings

### Binomial Distribution: A Starting Point

The journey begins with the Binomial distribution, which calculates the probability of obtaining a certain number of successes in a fixed number of independent trials. It's expressed as:

\[ P(X = k) = \binom{n}{k} p^k (1-p)^{n-k} \]

where:
- \( n \) is the number of trials
- \( k \) is the number of successes
- \( p \) is the probability of success on a single trial.

### Transitioning to Poisson

The Poisson distribution emerges as a special case of the Binomial distribution, particularly when the number of trials is large (\( n \rightarrow \infty \)), and the probability of success is small (\( p \rightarrow 0 \)), while their product (\( \lambda = np \)) remains constant.

The Poisson distribution is given by:

\[ P(X = k) = \frac{e^{-\lambda} \lambda^k}{k!} \]

where \( \lambda \) is the mean number of successes over the interval.

### Graphical Interpretation

By graphically comparing the two distributions for varying values of \( n \) and \( p \), we can observe how the Binomial distribution converges to the Poisson distribution under these conditions.

## Practical Application: Email Analysis

Now, let's apply this knowledge to a practical scenario: estimating the number of emails one might receive in an hour.

### Setting Up the Experiment

For this experiment, we assume an average of 5 emails per hour. This rate (\( \lambda \)) serves as our parameter for the Poisson distribution.

### Simulating Email Receipt

Using a programming tool like Python, we can simulate the receipt of emails over a 24-hour period. The Poisson distribution will allow us to model the probability of receiving a certain number of emails each hour.

### Visualizing the Results

The simulation results can be visualized in a histogram, showing the frequency of hours with a specific number of emails. This graph provides a clear picture of the email distribution pattern over the course of a day.

## Conclusion: Insights and Applications

This analysis not only deepens our understanding of the Poisson distribution but also demonstrates its practical utility in everyday scenarios. Whether it's for planning resources in customer service or managing workload in IT support, the Poisson distribution offers valuable insights into event frequencies.

Understanding statistical concepts like the Poisson distribution and their derivation from more fundamental principles enriches our ability to interpret and analyze the world around us. Stay tuned for more explorations into the exciting world of probability and statistics!