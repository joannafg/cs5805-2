{
  "hash": "702e6105b4468cbcb0a74ab5980308e5",
  "result": {
    "markdown": "---\ntitle: Test\nauthor: Joanna Fang\ndate: '2023-11-17'\ncategories:\n  - code\n  - analysis\n  - test\n---\n\nThis is a test post. \nThis is to test changes were deployed : D ---- 12:21PM \nThis is to test changes were deployed : D ---- 1:05PM \n\n\n![](elena-cordery-RLlcbkemwnw-unsplash.jpg)\n\nHere's a simple Python code snippet:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nprint(\"Hello, world 123!\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello, world 123!\n```\n:::\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport sys\n!{sys.executable} -m pip install numpy\n!{sys.executable} -m pip install matplotlib\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDefaulting to user installation because normal site-packages is not writeable\r\nRequirement already satisfied: numpy in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (1.26.2)\r\nWARNING: You are using pip version 21.2.4; however, version 23.3.1 is available.\r\nYou should consider upgrading via the '/Library/Developer/CommandLineTools/usr/bin/python3 -m pip install --upgrade pip' command.\r\nDefaulting to user installation because normal site-packages is not writeable\r\nRequirement already satisfied: matplotlib in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (3.8.2)\r\nRequirement already satisfied: pillow>=8 in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (from matplotlib) (10.1.0)\r\nRequirement already satisfied: numpy<2,>=1.21 in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (from matplotlib) (1.26.2)\r\nRequirement already satisfied: kiwisolver>=1.3.1 in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (from matplotlib) (1.4.5)\r\nRequirement already satisfied: importlib-resources>=3.2.0 in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (from matplotlib) (6.1.1)\r\nRequirement already satisfied: fonttools>=4.22.0 in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (from matplotlib) (4.45.1)\r\nRequirement already satisfied: pyparsing>=2.3.1 in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (from matplotlib) (3.1.1)\r\nRequirement already satisfied: packaging>=20.0 in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (from matplotlib) (23.2)\r\nRequirement already satisfied: cycler>=0.10 in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (from matplotlib) (0.12.1)\r\nRequirement already satisfied: contourpy>=1.0.1 in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (from matplotlib) (1.2.0)\r\nRequirement already satisfied: python-dateutil>=2.7 in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (from matplotlib) (2.8.2)\r\nRequirement already satisfied: zipp>=3.1.0 in /Users/zimingfang/Library/Python/3.9/lib/python/site-packages (from importlib-resources>=3.2.0->matplotlib) (3.17.0)\r\nRequirement already satisfied: six>=1.5 in /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/site-packages (from python-dateutil>=2.7->matplotlib) (1.15.0)\r\nWARNING: You are using pip version 21.2.4; however, version 23.3.1 is available.\r\nYou should consider upgrading via the '/Library/Developer/CommandLineTools/usr/bin/python3 -m pip install --upgrade pip' command.\r\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![A line plot on a polar axis](index_files/figure-html/fig-polar-output-2.png){#fig-polar width=450 height=439}\n:::\n:::\n\n\n-Joanna \n\n\n# Understanding the Poisson Distribution through Email Traffic Analysis\n\n## Introduction\n\nIn the realm of probability and statistics, the Poisson distribution is a fundamental concept, often used to model the frequency of various types of events. This blog post aims to demystify the Poisson distribution by tracing its roots back to the Binomial distribution, and then, applying it to a real-world scenario: analyzing the number of emails received per hour.\n\n## The Theoretical Underpinnings\n\n### Binomial Distribution: A Starting Point\n\nThe journey begins with the Binomial distribution, which calculates the probability of obtaining a certain number of successes in a fixed number of independent trials. It's expressed as:\n\n\\[ P(X = k) = \\binom{n}{k} p^k (1-p)^{n-k} \\]\n\nwhere:\n- \\( n \\) is the number of trials\n- \\( k \\) is the number of successes\n- \\( p \\) is the probability of success on a single trial.\n\n### Transitioning to Poisson\n\nThe Poisson distribution emerges as a special case of the Binomial distribution, particularly when the number of trials is large (\\( n \\rightarrow \\infty \\)), and the probability of success is small (\\( p \\rightarrow 0 \\)), while their product (\\( \\lambda = np \\)) remains constant.\n\nThe Poisson distribution is given by:\n\n\\[ P(X = k) = \\frac{e^{-\\lambda} \\lambda^k}{k!} \\]\n\nwhere \\( \\lambda \\) is the mean number of successes over the interval.\n\n### Graphical Interpretation\n\nBy graphically comparing the two distributions for varying values of \\( n \\) and \\( p \\), we can observe how the Binomial distribution converges to the Poisson distribution under these conditions.\n\n## Practical Application: Email Analysis\n\nNow, let's apply this knowledge to a practical scenario: estimating the number of emails one might receive in an hour.\n\n### Setting Up the Experiment\n\nFor this experiment, we assume an average of 5 emails per hour. This rate (\\( \\lambda \\)) serves as our parameter for the Poisson distribution.\n\n### Simulating Email Receipt\n\nUsing a programming tool like Python, we can simulate the receipt of emails over a 24-hour period. The Poisson distribution will allow us to model the probability of receiving a certain number of emails each hour.\n\n### Visualizing the Results\n\nThe simulation results can be visualized in a histogram, showing the frequency of hours with a specific number of emails. This graph provides a clear picture of the email distribution pattern over the course of a day.\n\n## Conclusion: Insights and Applications\n\nThis analysis not only deepens our understanding of the Poisson distribution but also demonstrates its practical utility in everyday scenarios. Whether it's for planning resources in customer service or managing workload in IT support, the Poisson distribution offers valuable insights into event frequencies.\n\nUnderstanding statistical concepts like the Poisson distribution and their derivation from more fundamental principles enriches our ability to interpret and analyze the world around us. Stay tuned for more explorations into the exciting world of probability and statistics!\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}